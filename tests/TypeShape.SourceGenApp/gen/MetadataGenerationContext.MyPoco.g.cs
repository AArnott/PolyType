// <auto-generated/>
#nullable enable

using TypeShape;
using TypeShape.SourceGenModel;

public partial class MetadataGenerationContext
{
    public IType<MyPoco> MyPoco => _MyPoco ??= CreateMyPoco();
    private IType<MyPoco>? _MyPoco;

    private IType<MyPoco> CreateMyPoco()
    {
        return new SourceGenType<MyPoco>
        {
            Provider = this,
            CreatePropertiesFunc = CreateMyPocoProperties,
            ConstructorsFunc = CreateMyPocoConstructors,
        };
    }

    private IEnumerable<IProperty> CreateMyPocoProperties()
    {
        yield return new SourceGenProperty<MyPoco, bool>
        {
            Name = "Bool",
            DeclaringType = MyPoco,
            PropertyType = Bool,
            Getter = static (ref MyPoco obj) => obj.Bool,
        };

        yield return new SourceGenProperty<MyPoco, string>
        {
            Name = "String",
            DeclaringType = MyPoco,
            PropertyType = String,
            Getter = static (ref MyPoco obj) => obj.String,
        };

        yield return new SourceGenProperty<MyPoco, List<int>?>
        {
            Name = "List",
            DeclaringType = MyPoco,
            PropertyType = ListInt32!,
            Getter = static (ref MyPoco obj) => obj.List,
            Setter = static (ref MyPoco obj, List<int>? value) => obj.List = value,
        };

        yield return new SourceGenProperty<MyPoco, Dictionary<string, int>?>
        {
            Name = "Dict",
            DeclaringType = MyPoco,
            PropertyType = DictionaryStringInt32!,
            Getter = static (ref MyPoco obj) => obj.Dict,
            Setter = static (ref MyPoco obj, Dictionary<string, int>? value) => obj.Dict = value,
        };
    }

    private IEnumerable<IConstructor> CreateMyPocoConstructors()
    {
        yield return new SourceGenConstructor<MyPoco, (bool, string)>
        {
            DeclaringType = MyPoco,
            ParameterCount = 2,
            GetParametersFunc = CreateMyPocoConstructorParameters0,
            ArgumentStateConstructorFunc = static () => (true, "str"),
            ParameterizedConstructorFunc = static state => new MyPoco(state.Item1, state.Item2),
        };
    }

    private IEnumerable<IConstructorParameter> CreateMyPocoConstructorParameters0()
    {
        yield return new SourceGenConstructorParameter<(bool, string), bool>
        {
            Position = 0,
            Name = "bool",
            ParameterType = Bool,
            DefaultValue = true,
            Setter = static (ref (bool, string) state, bool value) => state = (value, state.Item2),
        };

        yield return new SourceGenConstructorParameter<(bool, string), string>
        {
            Position = 1,
            Name = "string",
            ParameterType = String,
            DefaultValue = "str",
            Setter = static (ref (bool, string) state, string value) => state = (state.Item1, value),
        };
    }
}